# server.port=${port:8081}
# spring.datasource.url=jdbc:mysql://localhost:3306/employee_db
# spring.datasource.username=microserviceuser
# spring.datasource.password=redRum#489356
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.jpa.hibernate.ddl-auto=update
spring.application.name=EMPLOYEE-SERVICE
# eureka.client.serviceUrl.defaultZone=http://127.0.0.1:8761/eureka/
spring.config.import=optional:configserver:http://127.0.0.1:8888

# rabbitMQ message broker turned off right now so I don't have to have docker running
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# Actuator endpoints for circuit breaker
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

# Circuit breaker config
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.failureRateThreshold=50
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.sliding-window-size=10
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.sliding-window-type=COUNT_BASED

# Retry configuration
# resilience4j.retry.instances.EMPLOYEE-SERVICE.registerHealthIndicator=true
resilience4j.retry.instances.EMPLOYEE-SERVICE.max-attempts=5
resilience4j.retry.instances.EMPLOYEE-SERVICE.wait-duration=1s
